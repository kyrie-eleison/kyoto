{"version":3,"sources":["banners/streetMap.png","banners/KyotoPicture.js","banners/Map.js","banners/scrollEvent/Navigation.js","banners/scrollEvent/PictureScrollElement.js","banners/scrollEvent/PictureScroll.js","banners/Contents.js","index.js"],"names":["module","exports","KyotoPicture","props","getPicture","a","unsplash","Unsplash","accessKey","secret","search","photos","then","toJson","json","pictureUrl","results","urls","full","this","setState","isLoading","state","className","alt","src","href","target","rel","style","color","React","Component","Map","componentHeight","ReactDOM","findDOMNode","getBoundingClientRect","y","scrollY","streetMap","Navigation","placeArray","navigationState","htmlArray","i","length","className_i_Nav","className_i_Css","className_i","charAt","toUpperCase","slice","push","key","backgroundColor","PictureScrollElement","navigationLocation","id","pictureArray","placeName","htmlArray_i","placeName_i","j","PictureScroll","picturesArray","picturesUrl","Fragment","Contents","getPictures","map","element","navigationNumber","bind","concat","Index","event","document","documentElement","scrollTop","window","addEventListener","handleScroll","render","getElementById"],"mappings":"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","file":"static/js/main.e1443f18.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/streetMap.8eadf828.png\";","import React from 'react';\nimport './KyotoPicture.css'\n\nimport Unsplash, {toJson} from 'unsplash-js';\n\nclass KyotoPicture extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            pictureUrl: null,\n            isLoading: true,\n        }\n    }    \n\n    getPicture = async function(){\n        let unsplash = new Unsplash({\n            accessKey: \"FjGGq2MVYPJMJSo8B8q8Tf4pYg6paijuhLWM5MzwGXc\",\n            secret: \"JvCLvuZjXj7S86EDGSk3IqrIib2W2wJYsmYuMbiSdDQ\"\n          });\n        let pictureUrl; \n    \n        await unsplash.search.photos(\"kyoto_street\",1,1)\n        .then(toJson)\n        .then(json => {\n        pictureUrl = json.results[0].urls.full;\n        });\n    \n        this.setState({pictureUrl: pictureUrl, isLoading: false});\n    }\n\n    componentDidMount(){\n        this.getPicture();\n    }    \n\n    render(){\n        const {isLoading, pictureUrl} = this.state;\n        return(\n            <section className=\"kyotoPicture\">\n                {(isLoading)?\n                    <div className=\"loader\">\n                        <span className=\"loader__text\">Loading...</span>\n                        </div>\n                    :\n                    <div>\n                        <img className=\"picture\" alt=\"KyotoStreet\" src={pictureUrl} />\n                        <div className=\"intro\">\n                            Discover Kyoto: <br />\n                            Meet the City's Splendidness <br />\n                            <span className=\"source\">All pictures in this page are from unsplash.com(<a href=\"https://unsplash.com/s/photos/kyoto_street\" target=\"_blank\" rel=\"noopener noreferrer\" style={{color: \"blue\"}}>Link</a>)</span>\n                        </div>    \n                    </div>\n                }\n        </section>\n        );\n    }\n}\n\nexport default KyotoPicture;\n\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport './Map.css'\nimport streetMap from './streetMap.png';\n\nclass Map extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            componentHeight: null,\n        }\n      }\n    // getPicture = async function(){\n        \n    // };\n\n    componentDidMount(){\n        // this.getMap();\n        const componentHeight = ReactDOM.findDOMNode(this).getBoundingClientRect().y;\n        this.setState({componentHeight: componentHeight});\n    };\n\n    render(){\n        const {componentHeight} = this.state;\n        const scrollY = this.props.scrollY;\n        \n        return (\n            <section className=\"map\">\n                {(scrollY >= 0.7*componentHeight)?\n                    <div className=\"mapGrid\">\n                        <img className=\"streetMap\" alt=\"Street Map\" src={streetMap} />\n                        <div className=\"mapIntro\">\n                            <p>How About This Route: <br />\n                            From Kiyomizu-Dera to Ginkakuji <br />\n                            <span className=\"mapSource\">This map is from www.google.com(<a href=\"https://www.google.com/maps/dir/%E6%B8%85%E6%B0%B4%E5%AF%BA,+%E6%97%A5%E6%9C%AC%E3%80%81%E3%80%92605-0862+%E4%BA%AC%E9%83%BD%E5%BA%9C%E4%BA%AC%E9%83%BD%E5%B8%82%E6%9D%B1%E5%B1%B1%E5%8C%BA%E6%B8%85%E6%B0%B4%EF%BC%92%EF%BC%99%EF%BC%94/ginkakuji/@35.0113979,135.7700995,14z/data=!3m1!4b1!4m13!4m12!1m5!1m1!1s0x600108d385dcfb07:0x62af658650c434ba!2m2!1d135.7850463!2d34.9948561!1m5!1m1!1s0x600109050b426fe1:0x258aca1ce888abc9!2m2!1d135.7982058!2d35.0270213\" target=\"_blank\" rel=\"noopener noreferrer\" style={{color: \"blue\"}}>Link</a>)</span></p>\n                        </div>\n                    </div>\n                    :\n                    <div className=\"loader\">\n                            <span className=\"loader__text\"></span>\n                    </div>\n                }\n            </section>\n        )\n    }\n}\n\nexport default Map;","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport './Navigation.css';\n\nclass Navigation extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            componentHeight: null,\n        };\n    }\n\n    componentDidMount(){\n        const componentHeight = ReactDOM.findDOMNode(this).getBoundingClientRect().y;\n        this.setState({componentHeight: componentHeight});  \n    }\n\n    render(){\n        const {componentHeight} = this.state;\n        const {placeArray, navigationState} = this.props;\n        let scrollY = this.props.scrollY;\n        let htmlArray = [];\n\n        for (let i = 0; i < placeArray.length; i++){\n            let className_i = placeArray[i];\n            let className_i_Nav;\n            let className_i_Css;\n            className_i_Nav = className_i.charAt(0).toUpperCase() + className_i.slice(1);\n            className_i_Css = className_i + \"Navigation\";\n            let color = \"gray\";\n\n            switch(navigationState) {\n                case \"kiyomizudera\":\n                  if (i%3 === 0){\n                      color = \"black\";\n                  }\n                  break;\n                case \"heian\":\n                  if (i%3 !== 2){\n                      color = \"black\";\n                  }\n                  break;\n                default:\n                  color = \"black\";\n              }\n    \n            htmlArray.push(<div key = {i} className={className_i_Css} style={{backgroundColor: color}}>\n            <span className=\"locationName\" style={{color: color}}>{className_i_Nav}</span></div>);\n            \n            if (i < 2){\n                htmlArray.push(<div key = {i+3} className=\"middle\"></div>);\n            };\n        }\n\n        return(\n            <div className=\"navigationElements\">\n                {(scrollY >= 0.7*componentHeight)?\n                    htmlArray\n                    :\n                    <div className=\"loader\">\n                        <span className=\"loader__text\">Loading...</span>\n                    </div>\n                }    \n            </div>   \n        )\n    }\n}\n\nexport default Navigation;\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport './PictureScrollElement.css'\n\nclass PictureScrollElement extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            componentHeight: null,\n        }\n      }\n\n    componentDidMount(){\n        const componentHeight = ReactDOM.findDOMNode(this).getBoundingClientRect().y;\n        this.setState({componentHeight: componentHeight});\n        this.props.navigationLocation(this.props.id, componentHeight);\n    }\n\n    render(){\n        let {id, pictureArray, placeName, scrollY} = this.props;\n        const {componentHeight} = this.state;\n        let htmlArray_i = []\n        const placeName_i = placeName.charAt(0).toUpperCase() + placeName.slice(1);\n    \n        for(let j = 0; j < pictureArray.length; j++){\n            htmlArray_i.push(<img key = {j} alt = \"pictures\" src = {pictureArray[j]} className=\"picturesElement\" />)\n        }\n\n        return(\n            <div key = {id} className={placeName} >\n                <h1>{placeName_i}</h1>\n                {(scrollY >= 0.9*componentHeight)?\n                    htmlArray_i\n                    :\n                    <div className=\"loader\">\n                        <span className=\"loader__text\">Loading...</span>\n                    </div>\n                }        \n            </div>\n        )\n    }\n}\n\nexport default PictureScrollElement;\n\n\n\n","import React from 'react';\nimport PictureScrollElement from './PictureScrollElement.js';\n\nclass PictureScroll extends React.Component{\n    \n    render(){\n        const placeArray = this.props.placeArray;\n        const picturesArray = this.props.picturesUrl;\n        let htmlArray = [];\n\n        for (let i = 0; i < picturesArray.length; i++){\n            htmlArray.push(<PictureScrollElement key = {i} id = {i} pictureArray = {picturesArray[i]} placeName = {placeArray[i]} scrollY = {this.props.scrollY} navigationLocation = {this.props.navigationLocation} navigationState = {this.props.navigationState}/>)\n        }   \n\n        return(\n            <React.Fragment>\n                {htmlArray}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default PictureScroll;","import React from 'react';\nimport './Contents.css';\nimport Navigation from './scrollEvent/Navigation.js';\nimport PictureScroll from './scrollEvent/PictureScroll.js';\n\nimport Unsplash, {toJson} from 'unsplash-js';\n\nclass Contents extends React.Component{\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            placeArray: [\"kiyomizudera\", \"heian\", \"ginkakuji\"],\n            picturesUrl: [],\n            isLoading: true,\n            navigationNumber: [],\n        };\n        this.navigationLocation = this.navigationLocation.bind(this);\n    }\n\n    getPictures = async function(){\n        let unsplash = new Unsplash({\n            accessKey: \"FjGGq2MVYPJMJSo8B8q8Tf4pYg6paijuhLWM5MzwGXc\",\n            secret: \"JvCLvuZjXj7S86EDGSk3IqrIib2W2wJYsmYuMbiSdDQ\"\n          });\n        \n        let picturesUrl = [];\n        \n        \n    \n        for (let i = 0; i < this.state.placeArray.length; i++){\n            await unsplash.search.photos(this.state.placeArray[i],1,3)\n            .then(toJson)\n            .then(json => {     \n            picturesUrl.push(json.results.map(element => {return element.urls.full}))            \n            });\n        }\n        \n        this.setState({picturesUrl: picturesUrl, isLoading: false});\n    };\n\n    componentDidMount(){\n        this.getPictures();\n    };\n\n    navigationLocation(i, componentHeight){\n        this.setState((state) => {\n            return {navigationNumber: state.navigationNumber.concat(componentHeight)}\n            });\n    };\n\n    render(){\n        const {placeArray, picturesUrl, isLoading, navigationNumber} = this.state;\n        const scrollY = this.props.scrollY;\n\n        let navigationState;\n\n        if (this.state.navigationLocation !== []){\n            if (scrollY >= navigationNumber[0] && scrollY < navigationNumber[1]){\n                navigationState = placeArray[0];\n            } else if (scrollY >= navigationNumber[1] && scrollY < navigationNumber[2]){\n                navigationState = placeArray[1];\n            } else if (scrollY >= navigationNumber[2]){\n                navigationState = placeArray[2];\n            }\n        }\n\n        return (\n            <section className=\"contents\">\n                {(!isLoading)?\n                <div className=\"contentsGrid\">\n                    <div className=\"navigation\">\n                        <Navigation placeArray = {placeArray} scrollY = {this.props.scrollY} navigationState = {navigationState}/>\n                    </div>\n                    <div className=\"pictures\">\n                        <PictureScroll placeArray = {placeArray} picturesUrl = {picturesUrl} scrollY = {this.props.scrollY} navigationLocation = {this.navigationLocation} navigationState = {this.state.navigationState}/>\n                    </div>\n                </div>\n                :\n                <div className=\"loader\">\n                        <span className=\"loader__text\"></span>\n                </div>\n                }\n            </section>\n        )\n    }\n}\n\nexport default Contents;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Index.css';\nimport KyotoPicture from './banners/KyotoPicture.js';\nimport Map from './banners/Map.js';\nimport Contents from './banners/Contents.js';\n\nclass Index extends React.Component {\n\n    state = {\n            scrollY: 0,\n    };\n    \n    handleScroll(event){\n        let scrollY = document.documentElement.scrollTop;        \n        this.setState({scrollY: scrollY});\n    }\n\n    componentDidMount(){\n        window.addEventListener('scroll', this.handleScroll.bind(this));\n    }\n\n    render(){\n\n        return(\n            <React.Fragment>\n                <KyotoPicture /> \n                <Map scrollY={this.state.scrollY}/> \n                <Contents scrollY={this.state.scrollY}/>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Index;\n// ========================================\n\nReactDOM.render(\n    <Index />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}